(translated from polish)

Solution:
(All maps do MAP_FIXED at exactly the place where the show program headers / NT_FILE; 
the actual code doing in the new context of the pile shifted).

1. For each PT_LOADa maps its memory anonymously on the area which suggests memsz. 
In this way, at the same time I reset the memory.
2. maps files from PT_NOTE (entries NT_FILE) on the way to fill a globally minded values of registers and TLS.
3. Map the real memory from the PT_LOADÃ“W.
4. I set permissions for chunks of memory from PT_LOAD according to the flags.
5. Playing TLS.
6. Playing registers, in particular the GS.
7. I jump to the EIP.

Link Program at a low address, 0x48000 here. Stack begin at 0x08000000 and 
I set to grow at * down *, not to "break" the area mapped.

Since the first mapping, I avoid GLIBC to eliminate problems to jump to the memory locations 
in which there is something already mapped (it gives random segfaulty) 
by all the magic that is in wrapperach added. I invoke clean syscall.

Construction of a classic make [all] with the highest level directory. 
Note: This build (and therefore run) tests. To build only the source, make make_src or make inside src /.
